version: '3.8'

services:
  # Movie Chat WebSocket Server
  movie-chat-server:
    build: .
    container_name: movie-chat-server
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 3000, timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - movie-chat-network

  # Redis for message persistence and session management
  redis:
    image: redis:7-alpine
    container_name: movie-chat-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - movie-chat-network
    command: redis-server --appendonly yes

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: movie-chat-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - movie-chat-server
    restart: unless-stopped
    networks:
      - movie-chat-network

networks:
  movie-chat-network:
    driver: bridge

volumes:
  redis_data:
